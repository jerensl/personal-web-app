name: CI

on:
    push:
        branches: [main]
    pull_request:
        types: [opened, synchronize]

    workflow_dispatch:

jobs:
    deps:
        name: Install dependencies
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Setup Node.js 14.x
              uses: actions/setup-node@v1
              with:
                  node-version: '14.x'

            - name: Install locked dependencies
              run: yarn install --frozen-lockfile

            - name: Fetch the latest data
              run: yarn run mirror-box

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - uses: actions/cache@v2
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

    test:
        runs-on: ubuntu-latest
        needs: install-deps
        steps:
            - name: Restore cached dependencies
            - uses: actions/cache@v2
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Setup Node.js 14.x
              uses: actions/setup-node@v1
              with:
                  node-version: '14.x'

            - name: Check Code Coverage
              run: yarn test:coverage

            - name: Upload code coverage reports to Codecov
              uses: codecov/codecov-action@v2
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
