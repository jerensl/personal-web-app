name: Build and Test

on:
    pull_request:
        types: [opened, synchronize, reopened, closed]
        branches:
            - main

jobs:
    lint:
        if: github.repository == 'jerensl/www.jerenslensun.com'
        name: ESLint
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 9
            - name: Setup Node.js 18.x
              uses: actions/setup-node@v4
              with:
                  node-version: '18.x'
                  cache: 'pnpm'
            - name: Install locked dependencies
              run: pnpm install --frozen-lockfile --prefer-offline
            - name: Lint files
              run: pnpm run lint
              env:
                  CI: true
    type-check:
        if: github.repository == 'jerensl/www.jerenslensun.com'
        name: Type check
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Setup Node.js 18.x
              uses: actions/setup-node@v4
              with:
                  node-version: '18.x'
                  cache: 'pnpm'
            - name: Install locked dependencies
              run: pnpm install --frozen-lockfile --prefer-offline
            - name: Perform type checking
              run: pnpm run type-check
              env:
                  CI: true
    test:
        if: github.repository == 'jerensl/www.jerenslensun.com'
        name: Unit and integration tests
        runs-on: ubuntu-latest
        env:
            NEXT_PUBLIC_IMAGES_CDN: ${{ secrets.NEXT_PUBLIC_IMAGES_CDN }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 9
            - name: Setup Node.js 18.x
              uses: actions/setup-node@v4
              with:
                  node-version: '18.x'
                  cache: 'pnpm'
            - name: Install locked dependencies
              run: pnpm install --frozen-lockfile --prefer-offline
            - name: Check Code Coverage
              run: pnpm run test:coverage
            - name: Upload code coverage reports to Codecov
              uses: codecov/codecov-action@v4
              with:
                  flags: unittests # optional
                  name: jerens-web-app # optional
                  token: ${{ secrets.CODECOV_TOKEN }} # required
    e2e:
        if: github.repository == 'jerensl/www.jerenslensun.com'
        name: End-to-end tests
        runs-on: ubuntu-latest
        env:
            NEXT_PUBLIC_IMAGES_CDN: ${{ secrets.NEXT_PUBLIC_IMAGES_CDN }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 9
            - name: Setup Node.js 18.x
              uses: actions/setup-node@v4
              with:
                  node-version: '18.x'
                  cache: 'pnpm'
            - name: Install Cypress
              run: pnpm add cypress
            - name: Build the web app
              run: pnpm run build
            - name: Run Cypress
              uses: cypress-io/github-action@v6
              with:
                  record: true
                  start: pnpm run start
                  wait-on: 'http://localhost:3000'
              env:
                  CI: true
                  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    azure_deploy_staging:
        if: github.repository == 'jerensl/www.jerenslensun.com'
        uses: ./.github/workflows/azure.yml
        secrets: inherit
    lhci:
        if: >
            github.repository == 'jerensl/www.jerenslensun.com' && 
            contains(github.event.pull_request.labels.*.name, 'need-perf-check')
        needs: azure_deploy_staging
        uses: ./.github/workflows/lighthouse.yml
        secrets: inherit
        with:
            static_web_url: ${{ needs.azure_deploy_staging.outputs.static_web_app_url }}
